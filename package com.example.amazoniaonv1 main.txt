package com.example.amazoniaonv1

import android.provider.MediaStore
import android.content.Intent
import android.net.Uri
import android.view.View
import android.widget.Button
import android.os.Bundle
import androidx.activity.ComponentActivity

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val button = findViewById<Button>(R.id.button)
        val button2 = findViewById<Button>(R.id.button2)
        val button3 = findViewById<Button>(R.id.button3)
        val button4 = findViewById<Button>(R.id.button4)
        val button5 = findViewById<Button>(R.id.button5)

        button5.visibility = View.INVISIBLE

        button.setOnClickListener {
            button.visibility = View.INVISIBLE
            button2.visibility = View.INVISIBLE
            button3.visibility = View.INVISIBLE
            button4.visibility = View.INVISIBLE
            button5.visibility = View.VISIBLE
        }

        button2.setOnClickListener {
            button.visibility = View.INVISIBLE
            button2.visibility = View.INVISIBLE
            button3.visibility = View.INVISIBLE
            button4.visibility = View.INVISIBLE
            button5.visibility = View.VISIBLE
            val url = "http://www.google.com"
            val intent = Intent(Intent.ACTION_VIEW)
            intent.data = Uri.parse(url)
            startActivity(intent)
        }
        button3.setOnClickListener {
            button.visibility = View.INVISIBLE
            button2.visibility = View.INVISIBLE
            button3.visibility = View.INVISIBLE
            button4.visibility = View.INVISIBLE
            button5.visibility = View.VISIBLE
            val contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI
            val projection = arrayOf(MediaStore.Video.Media._ID)
            val cursor = contentResolver.query(
                contentUri,
                projection,
                null,
                null,
                "${MediaStore.Video.Media.DATE_ADDED} DESC"
            )
            cursor?.use {
                if (it.moveToFirst()) {
                    val columnIndex = it.getColumnIndex(MediaStore.Video.Media._ID)
                    if (columnIndex != -1) {
                        val videoId = it.getLong(columnIndex)
                        val videoUri = Uri.withAppendedPath(contentUri, videoId.toString())
                        val intent = Intent(Intent.ACTION_VIEW, videoUri)
                        intent.setDataAndType(videoUri, "video/*")
                        startActivity(intent)
                    } else {
                        // Tratar a situação quando a coluna não é encontrada
                    }
                } else {
                    // Tratar a situação quando não há resultados na consulta
                }
            }
        }
        button4.setOnClickListener {
            button.visibility = View.INVISIBLE
            button2.visibility = View.INVISIBLE
            button3.visibility = View.INVISIBLE
            button4.visibility = View.INVISIBLE
            button5.visibility = View.VISIBLE
        }

        button5.setOnClickListener {
            button.visibility = View.VISIBLE
            button2.visibility = View.VISIBLE
            button3.visibility = View.VISIBLE
            button4.visibility = View.VISIBLE
            button5.visibility = View.INVISIBLE
        }
    }
}